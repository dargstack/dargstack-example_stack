# dargstack-example.jonas-thelemann.de
# https://dargstack-example.jonas-thelemann.de/
# dargstack-example
# https://github.com/dargstack/dargstack-example/
---
secrets:
  postgres_db:
  # The database's name.
    file: ./secrets/postgres/db.secret
  postgres_password:
  # The database default user's password.
    file: ./secrets/postgres/password.secret
  postgres_user:
  # The database default user's name.
    file: ./secrets/postgres/user.secret
services:
  adminer:
  # You can access the database's frontend at [adminer.localhost](https://adminer.localhost/).
  # This information is required for login:
  #
  # |          |                     |
  # | -------- | ------------------- |
  # | System   | PostgreSQL          |
  # | Server   | postgres            |
  # | Username | [postgres_user]     |
  # | Password | [postgres_password] |
  # | Database | [postgres_db]       |
  #
  # Values in square brackets are [Docker secrets](https://docs.docker.com/engine/swarm/secrets/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.middlewares=redirectscheme
      - traefik.http.routers.adminer.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.rule=Host(`adminer.${STACK_DOMAIN}`)
      - traefik.http.routers.adminer_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    image: adminer:4.8.1-standalone@sha256:16d5b637e94d2e3206c531d0dc22207467dc1160c071d4d75c64b7ccee08f360
    volumes:
    - ../production/configurations/adminer/adminer.css:/var/www/html/adminer.css:ro
  dargstack-example:
  # You can access the main project at [localhost](https://localhost/).
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.routers.dargstack-example.entryPoints=web
      - traefik.http.routers.dargstack-example.middlewares=redirectscheme
      - traefik.http.routers.dargstack-example.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.dargstack-example.service=dargstack-example #DARGSTACK-REMOVE
      - traefik.http.routers.dargstack-example_secure.entryPoints=web-secure
      - traefik.http.routers.dargstack-example_secure.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`)
      - traefik.http.routers.dargstack-example_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.routers.dargstack-example_secure.service=dargstack-example #DARGSTACK-REMOVE
      - traefik.http.routers.dargstack-example_secure_nuxt.entryPoints=nuxt #DARGSTACK-REMOVE
      - traefik.http.routers.dargstack-example_secure_nuxt.service=dargstack-example_secure_nuxt #DARGSTACK-REMOVE
      - traefik.http.routers.dargstack-example_secure_nuxt.rule=Host(`${STACK_DOMAIN}`, `www.${STACK_DOMAIN}`) #DARGSTACK-REMOVE
      - traefik.http.services.dargstack-example.loadbalancer.server.port=3000 #DARGSTACK-REMOVE
      - traefik.http.services.dargstack-example_secure_nuxt.loadbalancer.server.port=24678 #DARGSTACK-REMOVE
    image: dargstack/dargstack-example:dev
    user: node:node
    volumes:
    - ${PNPM_STORE_DIR}:/srv/.pnpm-store/
    - ../../../dargstack-example:/srv/app/
  postgres:
  # You can access the database via `adminer`.
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER_FILE: /run/secrets/postgres_user
    image: postgres:16.1-alpine@sha256:17eb369d9330fe7fbdb2f705418c18823d66322584c77c2b43cc0e1851d01de7
    secrets:
    - postgres_db
    - postgres_password
    - postgres_user
    volumes:
    - postgres_data:/var/lib/postgresql/data/
  traefik:
  # You can access the reverse proxy's dashboard at [traefik.localhost](https://traefik.localhost/).
  # Traefik enables HTTPS for all services and acts as a load-balancer too.
    command:
    - --api=true
    - --entryPoints.web.address=:80
    - --entryPoints.web-secure.address=:443
    - --providers.docker=true
    - --providers.docker.endpoint=unix:///var/run/docker.sock
    - --providers.docker.exposedByDefault=false
    - --providers.docker.swarmMode=true
    - --providers.file.filename=/dynamic.yml #DARGSTACK-REMOVE
    - --providers.file.watch=true #DARGSTACK-REMOVE
    deploy:
      labels:
      - traefik.enable=true
      - traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https
      - traefik.http.routers.traefik.middlewares=redirectscheme
      - traefik.http.routers.traefik.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.rule=Host(`traefik.${STACK_DOMAIN}`)
      - traefik.http.routers.traefik_secure.service=api@internal
      - traefik.http.routers.traefik_secure.tls.options=mintls13@file #DARGSTACK-REMOVE
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      mode: global
      placement:
        constraints:
        - node.role == manager
    image: traefik:2.10.7@sha256:6341b98aec5ec8969b99e9730f4c5b22cca3103d42b6bbe4b7a3c910758fe565
    ports:
    - mode: host
      protocol: tcp
      published: 80
      target: 80
    - mode: host
      protocol: tcp
      published: 443
      target: 443
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./certificates/:/etc/traefik/acme/
    - ./configurations/traefik/dynamic.yml:/dynamic.yml:ro #DARGSTACK-REMOVE
version: "3.6"
volumes:
  postgres_data:
  # The database's data.
    {}
